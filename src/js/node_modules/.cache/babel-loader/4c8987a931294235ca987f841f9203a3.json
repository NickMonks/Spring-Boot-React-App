{"ast":null,"code":"import fetch from'unfetch';var checkStatus=function checkStatus(response){if(response.ok){return response;}else{var error=new Error(response.statusText);error.response=response;response.json().then(function(e){error.error=e;});// returns a reject with the error itself\nreturn Promise.reject(error);}};// We proxy the localhost \nexport var getAllStudents=function getAllStudents(){return fetch('http://localhost:8080/api/students').then(checkStatus);};export var addNewStudent=function addNewStudent(student){return fetch('api/students',{// headers: content-type\nheaders:{'Content-Type':'application/json'},method:'POST',body:JSON.stringify(student)}).then(checkStatus);};","map":{"version":3,"sources":["C:/demo/src/js/src/client.js"],"names":["fetch","checkStatus","response","ok","error","Error","statusText","json","then","e","Promise","reject","getAllStudents","addNewStudent","student","headers","method","body","JSON","stringify"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,SAAlB,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,QAAQ,CAAI,CAC5B,GAAIA,QAAQ,CAACC,EAAb,CAAiB,CACb,MAAOD,CAAAA,QAAP,CACH,CAFD,IAEO,CACH,GAAIE,CAAAA,KAAK,CAAG,GAAIC,CAAAA,KAAJ,CAAUH,QAAQ,CAACI,UAAnB,CAAZ,CACAF,KAAK,CAACF,QAAN,CAAiBA,QAAjB,CACAA,QAAQ,CAACK,IAAT,GAAgBC,IAAhB,CAAqB,SAAAC,CAAC,CAAI,CACtBL,KAAK,CAACA,KAAN,CAAcK,CAAd,CACH,CAFD,EAIA;AACA,MAAOC,CAAAA,OAAO,CAACC,MAAR,CAAeP,KAAf,CAAP,CACH,CACJ,CAbD,CAeA;AAEA,MAAO,IAAMQ,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,SACtBZ,CAAAA,KAAK,CAAC,oCAAD,CAAL,CACCQ,IADD,CACMP,WADN,CADsB,EAAvB,CAIP,MAAO,IAAMY,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,OAAO,QAC5Bd,CAAAA,KAAK,CAAC,cAAD,CAAiB,CAClB;AACAe,OAAO,CAAE,CACL,eAAe,kBADV,CAFS,CAKlBC,MAAM,CAAE,MALU,CAMlBC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeL,OAAf,CANY,CAAjB,CAAL,CAQCN,IARD,CAQMP,WARN,CAD4B,EAA7B","sourcesContent":["import fetch from 'unfetch';\r\n\r\nconst checkStatus = response => {\r\n    if (response.ok) {\r\n        return response;\r\n    } else {\r\n        let error = new Error(response.statusText);\r\n        error.response = response;\r\n        response.json().then(e => {\r\n            error.error = e;\r\n        });\r\n\r\n        // returns a reject with the error itself\r\n        return Promise.reject(error);\r\n    }\r\n}\r\n\r\n// We proxy the localhost \r\n\r\nexport const getAllStudents = () => \r\n        fetch('http://localhost:8080/api/students')\r\n        .then(checkStatus);\r\n\r\nexport const addNewStudent = student => \r\n        fetch('api/students', {\r\n            // headers: content-type\r\n            headers: {\r\n                'Content-Type':'application/json'\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify(student)\r\n        })\r\n        .then(checkStatus);"]},"metadata":{},"sourceType":"module"}
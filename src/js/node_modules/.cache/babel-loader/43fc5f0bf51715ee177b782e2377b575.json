{"ast":null,"code":"import _objectSpread from\"C:/demo/src/js/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from'react';import{Formik}from'formik';import{Input,Button,Tag}from'antd';import{addNewStudent}from'../client';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var inputBottomMargin={marginBottom:'5px'};var tagStyle=_objectSpread({backgroundColor:'#f50',color:'white'},inputBottomMargin);var AddStudentForm=function AddStudentForm(props){return/*#__PURE__*/_jsx(Formik,{initialValues:{firstName:'',lastName:'',email:'',gender:''},validate:function validate(values){var errors={};if(!values.firstName){errors.firstName='First Name Required';}if(!values.lastName){errors.lastName='Last Name Required';}if(!values.email){errors.email='Email Required';}else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)){errors.email='Invalid email address';}if(!values.gender){errors.gender='Gender Required';}else if(!['MALE','male','FEMALE','female'].includes(values.gender)){errors.gender=\"Gender must be (MALE, male, FEMALE, female)\";}return errors;},onSubmit:function onSubmit(student,_ref){var setSubmitting=_ref.setSubmitting;addNewStudent(student).then(function(){props.onSuccess();}).catch(function(err){props.onFailure(err);}).finally(function(){setSubmitting(false);});},children:function children(_ref2){var values=_ref2.values,errors=_ref2.errors,touched=_ref2.touched,handleChange=_ref2.handleChange,handleBlur=_ref2.handleBlur,handleSubmit=_ref2.handleSubmit,isSubmitting=_ref2.isSubmitting,submitForm=_ref2.submitForm,isValid=_ref2.isValid;return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(Input,{style:inputBottomMargin,name:\"firstName\",onChange:handleChange,onBlur:handleBlur,value:values.firstName,placeholder:\"First Name. E.g John\"}),errors.firstName&&touched.firstName&&/*#__PURE__*/_jsx(Tag,{style:tagStyle,children:errors.firstName}),/*#__PURE__*/_jsx(Input,{style:inputBottomMargin,name:\"lastName\",onChange:handleChange,onBlur:handleBlur,value:values.lastName,placeholder:\"Last Name. E.g Doe\"}),errors.lastName&&touched.lastName&&/*#__PURE__*/_jsx(Tag,{style:tagStyle,children:errors.lastName}),/*#__PURE__*/_jsx(Input,{style:inputBottomMargin,name:\"email\",onChange:handleChange,onBlur:handleBlur,value:values.email,placeholder:\"Email, E.g john@gmail.com\"}),errors.email&&touched.email&&/*#__PURE__*/_jsx(Tag,{style:tagStyle,children:errors.email}),/*#__PURE__*/_jsx(Input,{style:inputBottomMargin,name:\"gender\",onChange:handleChange,onBlur:handleBlur,value:values.gender,placeholder:\"Gender, E.g Male/Female\"}),errors.gender&&touched.gender&&/*#__PURE__*/_jsx(Tag,{style:tagStyle,children:errors.gender}),/*#__PURE__*/_jsx(Button,{type:\"submit\",onClick:function onClick(){return submitForm();},disabled:isSubmitting|(touched&&!isValid),children:\"Submit\"})]});}});};export default AddStudentForm;","map":{"version":3,"sources":["C:/demo/src/js/src/forms/AddStudentForm.js"],"names":["React","Formik","Input","Button","Tag","addNewStudent","inputBottomMargin","marginBottom","tagStyle","backgroundColor","color","AddStudentForm","props","firstName","lastName","email","gender","values","errors","test","includes","student","setSubmitting","then","onSuccess","catch","err","onFailure","finally","touched","handleChange","handleBlur","handleSubmit","isSubmitting","submitForm","isValid"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Formik } from 'formik';\r\nimport { Input, Button, Tag } from 'antd';\r\nimport { addNewStudent } from '../client';\r\n\r\nconst inputBottomMargin = {marginBottom: '5px'};\r\nconst tagStyle = {backgroundColor: '#f50', color: 'white', ...inputBottomMargin};\r\n\r\n\r\n\r\nconst AddStudentForm = (props) => (\r\n            <Formik\r\n            initialValues={{ firstName: '', lastName: '', email: '', gender: ''}}\r\n            validate={values => {\r\n                const errors = {};\r\n\r\n                if (!values.firstName){\r\n                    errors.firstName = 'First Name Required'\r\n                }\r\n\r\n                if (!values.lastName){\r\n                    errors.lastName = 'Last Name Required'\r\n                }\r\n\r\n                if (!values.email) {\r\n                errors.email = 'Email Required';\r\n                } else if (\r\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n                ) {\r\n                errors.email = 'Invalid email address';\r\n                }\r\n\r\n                if (!values.gender){\r\n                    errors.gender = 'Gender Required'\r\n                }else if(!['MALE', 'male', 'FEMALE', 'female'].includes(values.gender)){\r\n                    errors.gender = \"Gender must be (MALE, male, FEMALE, female)\"\r\n                }\r\n\r\n                return errors;\r\n            }}\r\n            onSubmit={(student, { setSubmitting }) => {\r\n                addNewStudent(student).then(() => {\r\n                    props.onSuccess();\r\n                    \r\n                })\r\n                .catch(err => {\r\n                    props.onFailure(err);\r\n                })\r\n                .finally(()=> {\r\n                    setSubmitting(false);\r\n                })\r\n            }}\r\n            >\r\n            {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                isSubmitting,\r\n                submitForm, \r\n                isValid\r\n                /* and other goodies */\r\n            }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                <Input\r\n                    style={inputBottomMargin}\r\n                    name=\"firstName\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.firstName}\r\n                    placeholder='First Name. E.g John'\r\n                />\r\n                {errors.firstName && touched.firstName && <Tag style={tagStyle}>{errors.firstName}</Tag>}\r\n                <Input\r\n                    style={inputBottomMargin}\r\n                    name=\"lastName\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.lastName}\r\n                    placeholder='Last Name. E.g Doe'\r\n                />\r\n                {errors.lastName && touched.lastName && <Tag style={tagStyle}>{errors.lastName}</Tag>}\r\n                <Input\r\n                    style={inputBottomMargin}\r\n                    name=\"email\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.email}\r\n                    placeholder='Email, E.g john@gmail.com'\r\n                />\r\n                {errors.email && touched.email && <Tag style={tagStyle}>{errors.email}</Tag>}\r\n                <Input\r\n                    style={inputBottomMargin}\r\n                    name=\"gender\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.gender}\r\n                    placeholder='Gender, E.g Male/Female'\r\n                />\r\n                {errors.gender && touched.gender && <Tag style={tagStyle}>{errors.gender}</Tag>}\r\n\r\n                <Button type=\"submit\" \r\n                        onClick={() => submitForm()}\r\n                        disabled={isSubmitting | (touched && !isValid)}>\r\n                    Submit\r\n                </Button>\r\n                </form>\r\n            )}\r\n            </Formik>\r\n        );\r\n\r\nexport default AddStudentForm;"]},"metadata":{},"sourceType":"module"}